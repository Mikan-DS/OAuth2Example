// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OAuth2CoreLib;

#nullable disable

namespace OAuth2Implementation.Migrations
{
    [DbContext(typeof(OAuthDbContext))]
    partial class OAuthDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("OAuth2CoreLib.Models.AuthorizationCode", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Activated")
                        .HasColumnType("INTEGER");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.HasIndex("user_id");

                    b.ToTable("OAuth2.AuthorizationCodes");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.AuthorizationCodeScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorizationCodeCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ResourceScopeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationCodeCode");

                    b.HasIndex("ResourceScopeId");

                    b.ToTable("OAuth2.AuthorizationCodeScope");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.Client", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastAccessed")
                        .HasColumnType("TEXT");

                    b.Property<string>("Secret")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId");

                    b.ToTable("OAuth2.Clients");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.ClientScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ResourceScopeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ResourceScopeId");

                    b.ToTable("OAuth2.ClientScopes");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.ResourceScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OAuth2.ResourceScopes");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.User", b =>
                {
                    b.Property<string>("user_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("secret")
                        .HasColumnType("TEXT");

                    b.HasKey("user_id");

                    b.ToTable("OAuth2.Users");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.UserAllowedScope", b =>
                {
                    b.Property<int>("key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResourceScopeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("key");

                    b.HasIndex("ResourceScopeId");

                    b.HasIndex("user_id");

                    b.ToTable("OAuth2.UserAllowedScopes");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.AuthorizationCode", b =>
                {
                    b.HasOne("OAuth2CoreLib.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.AuthorizationCodeScope", b =>
                {
                    b.HasOne("OAuth2CoreLib.Models.AuthorizationCode", "AuthorizationCode")
                        .WithMany("Scopes")
                        .HasForeignKey("AuthorizationCodeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OAuth2CoreLib.Models.ResourceScope", "ResourceScope")
                        .WithMany()
                        .HasForeignKey("ResourceScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizationCode");

                    b.Navigation("ResourceScope");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.ClientScope", b =>
                {
                    b.HasOne("OAuth2CoreLib.Models.Client", "Client")
                        .WithMany("Scopes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OAuth2CoreLib.Models.ResourceScope", "ResourceScope")
                        .WithMany()
                        .HasForeignKey("ResourceScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("ResourceScope");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.UserAllowedScope", b =>
                {
                    b.HasOne("OAuth2CoreLib.Models.ResourceScope", "ResourceScope")
                        .WithMany()
                        .HasForeignKey("ResourceScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OAuth2CoreLib.Models.User", "user")
                        .WithMany("Scopes")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResourceScope");

                    b.Navigation("user");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.AuthorizationCode", b =>
                {
                    b.Navigation("Scopes");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.Client", b =>
                {
                    b.Navigation("Scopes");
                });

            modelBuilder.Entity("OAuth2CoreLib.Models.User", b =>
                {
                    b.Navigation("Scopes");
                });
#pragma warning restore 612, 618
        }
    }
}
